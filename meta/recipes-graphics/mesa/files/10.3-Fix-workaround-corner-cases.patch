From e5620a19d2ac29c654d563d9ddeb02cf01f2009e Mon Sep 17 00:00:00 2001
From: Haixia Shi <hshi@chromium.org>
Date: Mon, 12 Dec 2016 11:51:55 -0800
Subject: [PATCH 11/19] CHROMIUM: i965: Fix corner cases of brw depth stencil
 workaround
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

Since we can't repro this bug, it's hard to track it down, but it
looks like there are multiple issues with the workaround, which this
patch tries to fix.

This fixes two corner cases with the workaround:
- Fix the case where there is a depth but no stencil
- Fix the case there the depth mt hasn't been created

BUG=chromium:423546
TEST=builds and runs on link

Change-Id: Ib2813252dc825443470f67b6214c16d38981cda5
Signed-off-by: St√©phane Marchesin <marcheu@chromium.org>
Signed-off-by: Prince Agyeman <prince.agyeman@intel.com>
Signed-off-by: Dhinakaran Pandiyan <dhinakaran.pandiyan@intel.com>
Signed-off-by: James Ausmus <james.ausmus@intel.com>
Signed-off-by: Tomasz Figa <tfiga@chromium.org>
---
 src/mesa/drivers/dri/i965/brw_misc_state.c | 10 +++++-----
 1 file changed, 5 insertions(+), 5 deletions(-)

diff --git a/src/mesa/drivers/dri/i965/brw_misc_state.c b/src/mesa/drivers/dri/i965/brw_misc_state.c
index a208ea1..fe8fe0c 100644
--- a/src/mesa/drivers/dri/i965/brw_misc_state.c
+++ b/src/mesa/drivers/dri/i965/brw_misc_state.c
@@ -264,7 +264,7 @@ brw_workaround_depthstencil_alignment(struct brw_context *brw,
    brw->depthstencil.stencil_mt = NULL;
    if (depth_irb)
       brw->depthstencil.depth_mt = depth_mt;
-   if (stencil_irb)
+   if (stencil_irb && stencil_irb->mt)
       brw->depthstencil.stencil_mt = get_stencil_miptree(stencil_irb);
 
    /* Gen6+ doesn't require the workarounds, since we always program the
@@ -283,7 +283,7 @@ brw_workaround_depthstencil_alignment(struct brw_context *brw,
     * separate stencil.  To catch that case, we check whether
     * depth_mt->stencil_mt is non-NULL.
     */
-   if (depth_irb && invalidate_depth &&
+   if (depth_irb && depth_mt && invalidate_depth &&
        (_mesa_get_format_base_format(depth_mt->format) == GL_DEPTH_STENCIL ||
         depth_mt->stencil_mt)) {
       invalidate_depth = invalidate_stencil && depth_irb && stencil_irb
@@ -338,7 +338,7 @@ brw_workaround_depthstencil_alignment(struct brw_context *brw,
          tile_y = depth_irb->draw_y & tile_mask_y;
       }
 
-      if (stencil_irb) {
+      if (stencil_irb && stencil_irb->mt) {
          stencil_mt = get_stencil_miptree(stencil_irb);
          intel_miptree_get_image_offset(stencil_mt,
                                         stencil_irb->mt_level,
@@ -360,7 +360,7 @@ brw_workaround_depthstencil_alignment(struct brw_context *brw,
    }
 
    /* If we have (just) stencil, check it for ignored low bits as well */
-   if (stencil_irb) {
+   if (stencil_irb && stencil_irb->mt) {
       intel_miptree_get_image_offset(stencil_mt,
                                      stencil_irb->mt_level,
                                      stencil_irb->mt_layer,
@@ -461,7 +461,7 @@ brw_workaround_depthstencil_alignment(struct brw_context *brw,
                                              (depth_irb->draw_y & ~tile_mask_y) / 2);
       }
    }
-   if (stencil_irb) {
+   if (stencil_irb && stencil_irb->mt) {
       stencil_mt = get_stencil_miptree(stencil_irb);
 
       brw->depthstencil.stencil_mt = stencil_mt;
-- 
2.8.0.rc3.226.g39d4020

